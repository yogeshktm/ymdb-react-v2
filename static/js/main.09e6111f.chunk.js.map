{"version":3,"sources":["components/MovieCard/index.js","components/MovieCardPlaceholder/index.js","components/SearchInput/index.js","container/MovieCardContainer/index.js","components/MovieList/index.js","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","this","props","fullData","imdbID","imdbRating","Title","Poster","Year","Actors","Plot","Language","Genre","Director","Runtime","Country","imdbLink","class","notFound","className","href","src","alt","React","Component","MovieCardPlaceholder","aria-hidden","SearchInput","handleChange","handleMovieTypeChange","handleSubmit","handleLinkClick","displayList","_","values","Search","sort","map","item","key","onClick","id","onSubmit","autoFocus","type","autoComplete","onInput","placeholder","onChange","MovieCardContainer","state","movieData","searchKeyword","searchType","isLoading","movieDetailData","getMovieDetails","bind","handleResponse","linkClick","finalUrl","apiUrl","setState","fetch","then","response","json","data","catch","error","console","log","movieName","returnMultiple","Response","e","preventDefault","length","target","value","movieId","getMoviebyID","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09e6111f.chunk.js","sourcesContent":["import React from \"react\";\nexport class MovieCard extends React.Component {\n  render() {\n    const {\n      imdbID,\n      imdbRating,\n      Title,\n      Poster,\n      Year,\n      Actors,\n      Plot,\n      Language,\n      Genre,\n      Director,\n      Runtime,\n      Country,\n    } = this.props.fullData;\n    let imdbLink = \"https://imdb.com/title/\" + imdbID;\n    return (\n      <>\n        <div class=\"card\">\n          <div class={this.props.notFound === true ? \"hidden\" : \"movie-info\"}>\n            <p>\n              <span className=\"release-year\">{Year}</span> -{\" \"}\n              <span className=\"country\">{Country}</span>\n            </p>\n            <h2 className=\"movie-title\">{Title}</h2>\n            <p class=\"lang\">Language: {Language}</p>\n            <p>Runtime: {Runtime}</p>\n            <p>Genre: {Genre}</p>\n            <p>Director : {Director}</p>\n            <p>Cast: {Actors}</p>\n            <p>Plot:</p>\n            <p>{Plot}</p>\n            <p>IMDB Rating : {imdbRating} / 10</p>\n            <a href={imdbLink}>IMDB Link</a>\n          </div>\n          <img\n            class=\"poster-img\"\n            src={\n              Poster === \"N/A\"\n                ? `https://dummyimage.com/390x610/c89f9b/fff.png&text=Poster+not+found`\n                : Poster\n            }\n            alt={Title}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nexport class MovieCardPlaceholder extends React.Component{\n    render(){\n        return(\n          <>\n        <div class=\"card\">\n            <div class=\"movie-info placeholder\">\n                <h3 class=\"title-ph\" aria-hidden=\"true\"></h3>\n                <p></p>\n                <p></p>\n                <p></p>\n                <p></p>\n                <p></p>\n                <p></p>\n                <p></p>\n            </div>  \n            <img class=\"poster-img\" src=\"https://dummyimage.com/390x610/c89f9b/fff.png&text=Loading...\" alt=\"loading...\"/>\n        </div>\n          </>\n        );\n      }\n}","import React from \"react\";\nimport _ from \"lodash\";\n\nexport class SearchInput extends React.Component {\n  render() {\n    const {\n      handleChange,\n      handleMovieTypeChange,\n      handleSubmit,\n      fullData,\n      handleLinkClick,\n    } = this.props;\n    let newData = _.values(fullData.Search).sort();\n    let displayList = newData.map(function (item, key) {\n      return (\n        <li>\n          <a onClick={handleLinkClick} id={item.imdbID}>\n            {item.Title}\n          </a>\n        </li>\n      );\n    });\n    return (\n      <>\n        <form onSubmit={handleSubmit} className=\"search-box\">\n          <input\n            autoFocus\n            className=\"search\"\n            type=\"search\"\n            id=\"search\"\n            autoComplete=\"off\"\n            onInput={handleChange}\n            placeholder=\"Search\"\n          />\n          <select onChange={handleMovieTypeChange}>\n            <option>movie</option>\n            <option>series</option>\n            <option>episodes</option>\n          </select>\n          <button className=\"btn\" type=\"submit\">\n            SEARCH\n          </button>\n          <div class=\"search-autocomplete\">\n            <ul>{displayList}</ul>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { MovieCard } from \"../../components/MovieCard\";\nimport { MovieCardPlaceholder } from \"../../components/MovieCardPlaceholder\";\nimport { SearchInput } from \"../../components/SearchInput\";\nimport { MovieList } from \"../../components/MovieList\";\n\nexport class MovieCardContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movieData: \"\",\n      searchKeyword: \"\",\n      notFound: false,\n      searchType: \"movie\",\n      isLoading: false,\n      movieDetailData: \"\",\n    };\n    this.getMovieDetails = this.getMovieDetails.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleResponse = this.handleResponse.bind(this);\n    this.handleMovieTypeChange = this.handleMovieTypeChange.bind(this);\n    this.linkClick = this.linkClick.bind(this);\n  }\n  componentWillMount() {}\n  componentDidMount() {}\n  componentDidUpdate() {}\n  getMoviebyID(id) {\n    const apiUrl = \"https://www.omdbapi.com/?\";\n    const apiKey = \"7c5d79b\";\n    const searchType = this.state.searchType;\n    const finalUrl =\n      apiUrl +\n      \"apiKey=\" +\n      apiKey +\n      \"&i=\" +\n      id +\n      \"&type=\" +\n      searchType +\n      \"&page=1\" +\n      \"&plot=full\";\n    this.setState({ isLoading: true }, () => {\n      fetch(finalUrl)\n        .then((response) => response.json())\n        .then(this.handleResponse)\n        .then(\n          // data => console.log(data),\n          (data) =>\n            this.setState({\n              isLoading: false,\n              movieDetailData: data,\n            })\n        )\n        .catch((error) => console.log(error));\n    });\n  }\n  getMovieDetails(movieName, returnMultiple) {\n    const apiUrl = \"https://www.omdbapi.com/?\";\n    const apiKey = \"7c5d79b\";\n    const searchReturnMultiple = returnMultiple ? \"&s=\" : \"&t=\";\n    const searchType = this.state.searchType;\n    const finalUrl =\n      apiUrl +\n      \"apiKey=\" +\n      apiKey +\n      searchReturnMultiple +\n      movieName +\n      \"&type=\" +\n      searchType +\n      \"&page=1\" +\n      \"&plot=full\";\n    this.setState({ isLoading: true }, () => {\n      fetch(finalUrl)\n        .then((response) => response.json())\n        .then(this.handleResponse)\n        .then(\n          // data => console.log(data),\n          (data) =>\n            this.setState({\n              isLoading: false,\n              movieData: data,\n            })\n        )\n        .catch((error) => console.log(error));\n    });\n  }\n  handleResponse(response) {\n    if (response.Response === \"False\") {\n      console.log(\"inside\");\n      this.setState({\n        notFound: true,\n      });\n    } else {\n      this.setState({\n        notFound: false,\n      });\n    }\n    return response;\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    let searchKeyword = this.state.searchKeyword;\n    console.log(searchKeyword.length);\n    if (searchKeyword.length > 0) {\n      this.getMovieDetails(this.state.searchKeyword, true);\n    }\n  }\n  handleChange(e) {\n    console.log(e.target.value);\n    // this.setState({\n    //   searchKeyword: e.target.value,\n    // });\n    let value = e.target.value;\n    this.setState((searchKeyword) => {\n      return { searchKeyword: value };\n    });\n    console.log(\"test1\", e.target.value.length);\n    console.log(\"test2\", this.state.searchKeyword.length);\n    if (e.target.value.length >= 3) {\n      this.getMovieDetails(e.target.value, true);\n    }\n  }\n  handleMovieTypeChange(e) {\n    console.log(e.target.value);\n    this.setState({\n      searchType: e.target.value,\n    });\n  }\n  linkClick(e) {\n    let movieId = e.target.id;\n    this.getMoviebyID(movieId);\n    this.setState({\n      movieData: \"\",\n    });\n  }\n  render() {\n    return (\n      <div class=\"container\">\n        <SearchInput\n          handleChange={this.handleChange}\n          handleMovieTypeChange={this.handleMovieTypeChange}\n          handleSubmit={this.handleSubmit}\n          fullData={this.state.movieData}\n          handleLinkClick={this.linkClick}\n        ></SearchInput>\n        {this.state.isLoading ? (\n          <MovieCardPlaceholder></MovieCardPlaceholder>\n        ) : this.state.movieDetailData !== \"\" ? (\n          <MovieCard fullData={this.state.movieDetailData}></MovieCard>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport _ from \"lodash\";\n\nexport class MovieList extends React.Component {\n  render() {\n    const { fullData } = this.props;\n    console.log(fullData);\n    let newData = _.values(fullData.Search);\n    console.log(newData);\n    let displayList = newData.map(function (item, key) {\n      console.log(item, key);\n      return <li>{item.Title}</li>;\n    });\n    return (\n      <>\n        <div class=\"list\">{displayList}</div>\n      </>\n    );\n  }\n}\n","import './App.css';\n\nimport { MovieCardContainer } from './container/MovieCardContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"logo\">\n        <h1>🎬 YMDB</h1>\n      </header>\n      <MovieCardContainer></MovieCardContainer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}